{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"+\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString($data.valor) + \" \", 1 /* TEXT */), _hoisted_2]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;gCAEXC,oBAAkB,gBAAV,GAAC;;;uBAFXC,oBAGM,OAHNC,UAGM,qCAFDC,WAAK,IAAG,GACX,2BAAkB","names":["id","_createElementVNode","_createElementBlock","_hoisted_1","$data"],"sourceRoot":"","sources":["/home/edson/Projetos/vuejs-metodos-eventos/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    {{ valor }}\n    <button>+</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      valor: 0,\n    };\n  },\n  methods: {\n    contador() {\n      this.valor++;\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}